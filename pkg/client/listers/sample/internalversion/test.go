/*

Copyright 2018 This Project Authors.

Author:  seanchann <seanchann@foxmail.com>

See docs/ for more information about the  project.

*/

// Code generated by lister-gen. DO NOT EDIT.

package internalversion

import (
	sample "github.com/seanchann/sample-apiserver/pkg/apis/sample"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TestLister helps list Tests.
type TestLister interface {
	// List lists all Tests in the indexer.
	List(selector labels.Selector) (ret []*sample.Test, err error)
	// Tests returns an object that can list and get Tests.
	Tests(namespace string) TestNamespaceLister
	TestListerExpansion
}

// testLister implements the TestLister interface.
type testLister struct {
	indexer cache.Indexer
}

// NewTestLister returns a new TestLister.
func NewTestLister(indexer cache.Indexer) TestLister {
	return &testLister{indexer: indexer}
}

// List lists all Tests in the indexer.
func (s *testLister) List(selector labels.Selector) (ret []*sample.Test, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*sample.Test))
	})
	return ret, err
}

// Tests returns an object that can list and get Tests.
func (s *testLister) Tests(namespace string) TestNamespaceLister {
	return testNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TestNamespaceLister helps list and get Tests.
type TestNamespaceLister interface {
	// List lists all Tests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*sample.Test, err error)
	// Get retrieves the Test from the indexer for a given namespace and name.
	Get(name string) (*sample.Test, error)
	TestNamespaceListerExpansion
}

// testNamespaceLister implements the TestNamespaceLister
// interface.
type testNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Tests in the indexer for a given namespace.
func (s testNamespaceLister) List(selector labels.Selector) (ret []*sample.Test, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*sample.Test))
	})
	return ret, err
}

// Get retrieves the Test from the indexer for a given namespace and name.
func (s testNamespaceLister) Get(name string) (*sample.Test, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(sample.Resource("test"), name)
	}
	return obj.(*sample.Test), nil
}
